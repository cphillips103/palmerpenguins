R.version
glimpse(penguins)
#Load Palmer Penguin library and data set
library(palmerpenguins)
data(package = 'palmerpenguins')
#Load libraries we need for dataframe manipulation and plotting
library(tidyr)
library(dplyr)
library(ggplot2)
library(gridExtra)
glimpse(penguins)
str(penguins)
#Initial plot to see which parameters might yield clues about species types
#Species vs flipper length
ggplot(aes(x = species, y = flipper_length_mm), data = df) + geom_boxplot() +
stat_summary(fun = mean, geom = 'point', shape = 4)
#Copy data into new datafrme and look at Column names for calculations
df <- penguins
names(df)
#Initial plot to see which parameters might yield clues about species types
#Species vs body mass
ggplot(aes(x = species, y = body_mass_g), data = df) + geom_boxplot() +
stat_summary(fun = mean, geom = 'point', shape = 4)
#Initial plot to see which parameters might yield clues about species types
#Species vs bill length
ggplot(aes(x = species, y = bill_length_mm), data = df) + geom_boxplot() +
stat_summary(fun = mean, geom = 'point', shape = 4)
#Initial plot to see which parameters might yield clues about species types
#Species vs bill depth
ggplot(aes(x = species, y = bill_depth_mm), data = df) + geom_boxplot() +
stat_summary(fun = mean, geom = 'point', shape = 4)
#Initial plot to see which parameters might yield clues about species types
#Species vs flipper length
ggplot(aes(x = species, y = flipper_length_mm), data = df) + geom_boxplot() +
stat_summary(fun = mean, geom = 'point', shape = 4)
visdat::vis_dat(penguins)
ggplot(penguins, aes(x = island, fill = species)) +
geom_bar(alpha = 0.8) +
scale_fill_manual(values = c("darkorange","purple","cyan4"),
guide = FALSE) +
theme_minimal() +
facet_wrap(~species, ncol = 1) +
coord_flip()
penguins %>%
select(species, body_mass_g, ends_with("_mm")) %>%
GGally::ggpairs(aes(color = species)) +
scale_colour_manual(values = c("darkorange","purple","cyan4")) +
scale_fill_manual(values = c("darkorange","purple","cyan4"))
#Initial plot to see which parameters might yield clues about species types
#Species vs body mass
ggplot(aes(x = species, y = body_mass_g), data = df) + geom_boxplot() +
stat_summary(fun = mean, geom = 'point', shape = 4) +
scale_colour_manual(values = c("darkorange","purple","cyan4")) +
scale_fill_manual(values = c("darkorange","purple","cyan4"))
#Initial plot to see which parameters might yield clues about species types
#Species vs body mass
ggplot(aes(x = species, y = body_mass_g), data = df) + geom_boxplot(color='darkblue') +
stat_summary(fun = mean, geom = 'point', shape = 4)
#Initial plot to see which parameters might yield clues about species types
#Species vs body mass
ggplot(aes(x = species, y = body_mass_g, color=cyl), data = df) + geom_boxplot(color='darkblue') +
stat_summary(fun = mean, geom = 'point', shape = 4)
#Initial plot to see which parameters might yield clues about species types
#Species vs body mass
ggplot(aes(x = species, y = body_mass_g, color=species), data = df) + geom_boxplot(color='darkblue') +
stat_summary(fun = mean, geom = 'point', shape = 4)
#Initial plot to see which parameters might yield clues about species types
#Species vs body mass
ggplot(aes(x = species, y = body_mass_g, color=species), data = df) + geom_boxplot(color=species) +
stat_summary(fun = mean, geom = 'point', shape = 4)
#Initial plot to see which parameters might yield clues about species types
#Species vs body mass
ggplot(aes(x = species, y = body_mass_g, color=species), data = df) + geom_boxplot(color="species"blue) +
#Initial plot to see which parameters might yield clues about species types
#Species vs body mass
ggplot(aes(x = species, y = body_mass_g, color=species), data = df) + geom_boxplot(color="species"blue") +
#Initial plot to see which parameters might yield clues about species types
#Species vs body mass
ggplot(aes(x = species, y = body_mass_g, color=species), data = df) + geom_boxplot(color="blue") +
stat_summary(fun = mean, geom = 'point', shape = 4)
#Initial plot to see which parameters might yield clues about species types
#Species vs body mass
ggplot(aes(x = species, y = body_mass_g, color=species), data = df) + geom_boxplot(color="blue") +
stat_summary(fun = mean, geom = 'point', shape = 4) + scale_fill_hue(l=40, c=35)
#Initial plot to see which parameters might yield clues about species types
#Species vs body mass
ggplot(aes(x = species, y = body_mass_g, color=species), data = df) + geom_boxplot(color="blue") +
stat_summary(fun = mean, geom = 'point', shape = 4)
#Initial plot to see which parameters might yield clues about species types
#Species vs body mass
ggplot(aes(x = species, y = body_mass_g), data = df) + geom_boxplot() +
stat_summary(fun = mean, geom = 'point', shape = 4)
#Initial plot to see which parameters might yield clues about species types
#Species vs body mass
ggplot(aes(x = species, y = body_mass_g), data = df) + geom_boxplot() +
stat_summary(fun = mean, geom = 'point', shape = 4)
#Initial plot to see which parameters might yield clues about species types
#Species vs body mass
ggplot(aes(x = species, y = body_mass_g), data = df) + scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9")) + geom_boxplot() +
stat_summary(fun = mean, geom = 'point', shape = 4)
#Initial plot to see which parameters might yield clues about species types
#Species vs body mass
ggplot(aes(x = species, y = body_mass_g), data = df) + geom_boxplot() + + scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))+
stat_summary(fun = mean, geom = 'point', shape = 4)
#Initial plot to see which parameters might yield clues about species types
#Species vs body mass
ggplot(aes(x = species, y = body_mass_g), data = df) + geom_boxplot() + scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))+
stat_summary(fun = mean, geom = 'point', shape = 4)
#Initial plot to see which parameters might yield clues about species types
#Species vs body mass
ggplot(aes(x = species, y = body_mass_g), data = df) + geom_boxplot() +
stat_summary(fun = mean, geom = 'point', shape = 4)
#Initial plot to see which parameters might yield clues about species types
#Species vs body mass
ggplot(aes(x = species, y = body_mass_g), data = df)
#Initial plot to see which parameters might yield clues about species types
#Species vs body mass
ggplot(aes(x = species, y = body_mass_g), data = df) + geom_boxplot()
#Initial plot to see which parameters might yield clues about species types
#Species vs body mass
ggplot(aes(x = species, y = body_mass_g), data = df) + geom_boxplot(fill='#A4A4A4', color="darkred")
#Initial plot to see which parameters might yield clues about species types
#Species vs body mass
ggplot(aes(x = species, y = body_mass_g), data = df) + geom_boxplot(fill='#ffffff', color="darkred")
#Initial plot to see which parameters might yield clues about species types
#Species vs body mass
ggplot(aes(x = species, y = body_mass_g), data = df) + geom_boxplot(fill='#fffff', color="darkred")
#Initial plot to see which parameters might yield clues about species types
#Species vs body mass
ggplot(aes(x = species, y = body_mass_g), data = df) + geom_boxplot(fill='#fffff3', color="darkred")
#Initial plot to see which parameters might yield clues about species types
#Species vs body mass
ggplot(aes(x = species, y = body_mass_g), data = df) + geom_boxplot(fill='darkblue', color="darkred")
#Initial plot to see which parameters might yield clues about species types
#Species vs body mass
ggplot(aes(x = species, y = body_mass_g), data = df) + geom_boxplot() + scale_fill_hue(l=40, c=35)
#Initial plot to see which parameters might yield clues about species types
#Species vs body mass
bp <- ggplot(aes(x = species, y = body_mass_g), data = df) + geom_boxplot()
bp + scale_fill_hue(l=40, c=35)
#Initial plot to see which parameters might yield clues about species types
#Species vs body mass
bp<-ggplot(aes(x = species, y = body_mass_g), data = df) + geom_boxplot()
bp + scale_fill_hue(l=40, c=35)
#Initial plot to see which parameters might yield clues about species types
#Species vs body mass
bp<-ggplot(aes(x = species, y = body_mass_g, fill=dose), data = df) + geom_boxplot()
bp + scale_fill_hue(l=40, c=35)
#Initial plot to see which parameters might yield clues about species types
#Species vs body mass
bp<-ggplot(aes(x = species, y = body_mass_g, fill=species), data = df) + geom_boxplot()
bp + scale_fill_hue(l=40, c=35)
#Initial plot to see which parameters might yield clues about species types
#Species vs body mass
bp<-ggplot(aes(x = species, y = body_mass_g, fill=species), data = df) + geom_boxplot() + coord_flip()
bp + scale_fill_hue(l=40, c=35)
#Initial plot to see which parameters might yield clues about species types
#Species vs bill length
bp<-ggplot(aes(x = species, y = bill_length_rm, fill=species), data = df) + geom_boxplot() + coord_flip()
bp + scale_fill_hue(l=40, c=35)
#Initial plot to see which parameters might yield clues about species types
#Species vs bill length
bp<-ggplot(aes(x = species, y = bill_length_mm, fill=species), data = df) + geom_boxplot() + coord_flip()
bp + scale_fill_hue(l=40, c=35)
#Initial plot to see which parameters might yield clues about species types
#Species vs bill depth
bp<-ggplot(aes(x = species, y = bill_depth_mm, fill=species), data = df) + geom_boxplot() + coord_flip()
bp + scale_fill_hue(l=40, c=35)
#Initial plot to see which parameters might yield clues about species types
#Species vs flipper length
bp<-ggplot(aes(x = species, y = flipper_length_mm, fill=species), data = df) + geom_boxplot() + coord_flip()
bp + scale_fill_hue(l=40, c=35)
#Grid analysis of histograms of the parameers: Lengt and Width and the Petal Length and Width.
# "species"           "island"            "bill_length_mm"    "bill_depth_mm"     "flipper_length_mm"
# "body_mass_g"       "sex"               "year"
p1 <- ggplot(aes(x = bill_length_mm, fill = species), data = df) +
geom_histogram()
p2 <- ggplot(aes(x = bill_depth_mm, fill = species), data = df) +
geom_histogram()
p3 <- ggplot(aes(x = flipper_length_mm, fill = species), data = df) + geom_histogram()
p4 <- ggplot(aes(x = body_mass_g, fill = species), data = df) +
geom_histogram()
grid.arrange(p1, p2, p3, p4, ncol = 2)
#Examine penguin data set with pairs matrix
pairs(penguins, col=penguins$species) +
scale_colour_manual(values = c("darkorange","purple","cyan4")) +
scale_fill_manual(values = c("darkorange","purple","cyan4"))
#Examine penguin data set with pairs matrix
pairs(penguins, col=penguins$species)
data_for_clustering <- df[,-5]
#kmeans data clustering partitioning (assuming 3 centers or clusters).
clusters_penguins <- kmeans(data_for_clustering, centers = 3)
data_for_clustering <- df
#kmeans data clustering partitioning (assuming 3 centers or clusters).
clusters_penguins <- kmeans(data_for_clustering, centers = 3, iter.max = 10, nstart = 1)
data_for_clustering <- df %>% drop_na()
#kmeans data clustering partitioning (assuming 3 centers or clusters).
clusters_penguins <- kmeans(data_for_clustering, centers = 3, iter.max = 10, nstart = 1)
data_for_clustering <- df
data_for_clustinerg %>% drop_na()
data_for_clustering <- df
data_for_clustering %>% drop_na()
#kmeans data clustering partitioning (assuming 3 centers or clusters).
clusters_penguins <- kmeans(data_for_clustering, centers = 3, iter.max = 10, nstart = 1)
data_for_clustering <- df
data_for_clustering %>% drop_na()
#kmeans data clustering partitioning (assuming 3 centers or clusters).
clusters_penguins <- kmeans(data_for_clustering, centers = 3)
data_for_clustering <- df[,3:6]
data_for_clustering %>% drop_na()
#kmeans data clustering partitioning (assuming 3 centers or clusters).
clusters_penguins <- kmeans(data_for_clustering, centers = 3)
data_for_clustering <- df[,3:6]
data_for_clustering %>% drop_na()
#kmeans data clustering partitioning (assuming 3 centers or clusters).
data_for_clustering
data_for_clustering <- df[,3:6]
data_for_clustering[!is.na(), ]
data_for_clustering <- df[,3:6]
data_for_clustering[!is.na(data_for_clustering), ]
data_for_clustering <- df[,3:6]
data_for_clustering
#kmeans data clustering partitioning (assuming 3 centers or clusters).
#data_for_clustering
data_for_clustering <- df[,3:6]
data_for_clustering_no_na <- drop_na(data_for_clustering)
#kmeans data clustering partitioning (assuming 3 centers or clusters).
data_for_clustering_no_na
data_for_clustering <- df[,3:6]
data_for_clustering_no_na <- drop_na(data_for_clustering)
#kmeans data clustering partitioning (assuming 3 centers or clusters).
data_for_clustering_no_na
clusters <- kmeans(data_for_clustering_no_na, 3)
clusters
library(cluster)
library(fpc)
library(factoextra)
library(knitr)
data_for_clustering <- df[,3:6]
data_for_clustering_no_na <- drop_na(data_for_clustering)
#kmeans data clustering partitioning (assuming 3 centers or clusters).
data_for_clustering_no_na
clusters_penguins <- kmeans(data_for_clustering_no_na, 3)
plotcluster(data_for_clustering_no_na,clusters_penguins$cluster)
plotcluster(data_for_clustering_no_na,clusters_penguins$cluster, color = TRUE, shade = TRUE)
data_for_clustering <- df[,3:6]
data_for_clustering_no_na <- drop_na(data_for_clustering)
#kmeans data clustering partitioning (assuming 3 centers or clusters).
data_for_clustering_no_na
clusters_penguins <- kmeans(data_for_clustering_no_na, iter.max = 10, nstart = 1)
data_for_clustering <- df[,3:6]
data_for_clustering_no_na <- drop_na(data_for_clustering)
#kmeans data clustering partitioning (assuming 3 centers or clusters).
data_for_clustering_no_na
clusters_penguins <- kmeans(data_for_clustering_no_na, iter.max = 10, nstart = 25)
data_for_clustering <- df[,3:6]
data_for_clustering_no_na <- drop_na(data_for_clustering)
#kmeans data clustering partitioning (assuming 3 centers or clusters).
data_for_clustering_no_na
clusters_penguins <- kmeans(data_for_clustering_no_na, iter.max = 10, nstart = 25, centers = 5)
plotcluster(data_for_clustering_no_na,clusters_penguins$cluster, color = TRUE, shade = TRUE)
data_for_clustering <- df[,3:6]
data_for_clustering_no_na <- drop_na(data_for_clustering)
#kmeans data clustering partitioning (assuming 3 centers or clusters).
data_for_clustering_no_na
clusters_penguins <- kmeans(data_for_clustering_no_na, iter.max = 10, nstart = 25, centers = 4)
plotcluster(data_for_clustering_no_na,clusters_penguins$cluster, color = TRUE, shade = TRUE)
data_for_clustering <- df[,3:6]
data_for_clustering_no_na <- drop_na(data_for_clustering)
#kmeans data clustering partitioning (assuming 3 centers or clusters).
data_for_clustering_no_na
clusters_penguins <- kmeans(data_for_clustering_no_na, iter.max = 10, nstart = 25, centers = 3)
plotcluster(data_for_clustering_no_na,clusters_penguins$cluster, color = TRUE, shade = TRUE)
table(clusters_penguins$cluster, penguins$species)
set.seed(20)
data_for_clustering <- df
data_for_clustering_no_na <- drop_na(data_for_clustering)
#kmeans data clustering partitioning (assuming 3 centers or clusters).
clusters_penguins <- kmeans(data_for_clustering_no_na[,3:6], nstart = 20, centers = 3)
plotcluster(data_for_clustering_no_na,clusters_penguins$cluster, color = TRUE, shade = TRUE)
set.seed(20)
data_for_clustering <- df
data_for_clustering_no_na <- drop_na(data_for_clustering)
#kmeans data clustering partitioning (assuming 3 centers or clusters).
clusters_penguins <- kmeans(data_for_clustering_no_na[,3:6], nstart = 20, centers = 3)
plotcluster(data_for_clustering_no_na[,3:6], clusters_penguins$cluster, color = TRUE, shade = TRUE)
table(clusters_penguins$cluster, penguins$species)
clusters_penguins
table(clusters_penguins)
set.seed(20)
data_for_clustering <- df
data_for_clustering_no_na <- drop_na(data_for_clustering)
#kmeans data clustering partitioning (assuming 3 centers or clusters).
clusters_penguins <- kmeans(data_for_clustering_no_na[,3:6], nstart = 20, centers = 3)
plotcluster(data_for_clustering_no_na[,3:6], clusters_penguins$cluster, color = TRUE, shade = TRUE)
penguins_no_na <- drop_na(penguins)
table(clusters_penguins$cluster, penguins_no_na$species)
set.seed(20)
data_for_clustering <- df
data_for_clustering_no_na <- drop_na(data_for_clustering)
#kmeans data clustering partitioning (assuming 3 centers or clusters).
clusters_penguins <- kmeans(data_for_clustering_no_na[,3:6], nstart = 20, centers = 4)
plotcluster(data_for_clustering_no_na[,3:6], clusters_penguins$cluster, color = TRUE, shade = TRUE)
penguins_no_na <- drop_na(penguins)
table(clusters_penguins$cluster, penguins_no_na$species)
set.seed(20)
data_for_clustering <- df
data_for_clustering_no_na <- drop_na(data_for_clustering)
#kmeans data clustering partitioning (assuming 3 centers or clusters).
clusters_penguins <- kmeans(data_for_clustering_no_na[,3:6], nstart = 20, centers = 2)
plotcluster(data_for_clustering_no_na[,3:6], clusters_penguins$cluster, color = TRUE, shade = TRUE)
penguins_no_na <- drop_na(penguins)
table(clusters_penguins$cluster, penguins_no_na$species)
#Variables used in clustering "bill_length_mm"  "bill_depth_mm" "flipper_length_mm" "body_mass_g"
set.seed(20)
data_for_clustering <- df
data_for_clustering_no_na <- drop_na(data_for_clustering)
#kmeans data clustering partitioning (assuming 3 centers or clusters).
clusters_penguins <- kmeans(data_for_clustering_no_na[,3:6], nstart = 20, centers = 3)
plotcluster(data_for_clustering_no_na[,3:6], clusters_penguins$cluster, color = TRUE, shade = TRUE)
penguins_no_na <- drop_na(penguins)
table(clusters_penguins$cluster, penguins_no_na$species)
